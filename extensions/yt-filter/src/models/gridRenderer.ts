// Autogenerated with https://transform.tools/json-to-typescript
// document.querySelector('ytd-rich-grid-renderer').data

export interface RichGridRenderer {
  contents: Content[];
  trackingParams: string;
  header: Header;
  targetId: string;
  reflowOptions: ReflowOptions;
  layoutSizing: string;
  minItemWidth: number;
}

export interface Content {
  richItemRenderer?: RichItemRenderer;
  continuationItemRenderer?: ContinuationItemRenderer;
  richSectionRenderer?: RichSectionRenderer;
}

export interface RichSectionRenderer {
  content: {
    /**
     *  Appears only for brand new sessions.
     * */
    feedNudgeRenderer: unknown;
  };
  trackingParams: string;
}

export interface RichItemRenderer {
  content: Content2;
  trackingParams: string;
  rowIndex: number;
  colIndex: number;
}

export interface Content2 {
  adSlotRenderer?: AdSlotRenderer;
  videoRenderer?: VideoRenderer;
}

export interface AdSlotRenderer {
  adSlotMetadata: AdSlotMetadata;
  fulfillmentContent: FulfillmentContent;
  enablePacfLoggingWeb: boolean;
  trackingParams: string;
}

export interface AdSlotMetadata {
  slotId: string;
  slotType: string;
  slotPhysicalPosition: number;
  adSlotLoggingData: AdSlotLoggingData;
}

export interface AdSlotLoggingData {
  serializedSlotAdServingDataEntry: string;
}

export interface FulfillmentContent {
  fulfilledLayout: FulfilledLayout;
}

export interface FulfilledLayout {
  inFeedAdLayoutRenderer: InFeedAdLayoutRenderer;
}

export interface InFeedAdLayoutRenderer {
  adLayoutMetadata: AdLayoutMetadata;
  renderingContent: RenderingContent;
}

export interface AdLayoutMetadata {
  layoutId: string;
  layoutType: string;
  adLayoutLoggingData: AdLayoutLoggingData;
}

export interface AdLayoutLoggingData {
  serializedAdServingDataEntry: string;
}

export interface RenderingContent {
  videoDisplayFullButtonedRenderer: VideoDisplayFullButtonedRenderer;
}

export interface VideoDisplayFullButtonedRenderer {
  videoId: string;
  thumbnail: Thumbnail;
  title: Title;
  description: Description;
  navigationEndpoint: NavigationEndpoint;
  inlinePlaybackEndpoint: InlinePlaybackEndpoint;
  channelThumbnail: ChannelThumbnail;
  lengthText: LengthText;
  shortBylineText: ShortBylineText;
  badge: Badge;
  menu: Menu;
  trackingParams: string;
  activeView: ActiveView;
  channelEndpoint: ChannelEndpoint;
  thumbnailOverlays: ThumbnailOverlay[];
  onImpression: OnImpression;
  secondaryDescription: SecondaryDescription;
  forceImpAutoplay: boolean;
}

export interface Thumbnail {
  thumbnails: Thumbnail2[];
}

export interface Thumbnail2 {
  url: string;
  width: number;
  height: number;
}

export interface Title {
  runs: Run[];
  accessibility: Accessibility;
}

export interface Run {
  text: string;
  loggingDirectives: LoggingDirectives;
}

export interface LoggingDirectives {
  trackingParams: string;
  visibility: Visibility;
}

export interface Visibility {
  types: string;
}

export interface Accessibility {
  accessibilityData: AccessibilityData;
}

export interface AccessibilityData {
  label: string;
}

export interface Description {
  runs: Run2[];
}

export interface Run2 {
  text: string;
  loggingDirectives: LoggingDirectives2;
}

export interface LoggingDirectives2 {
  trackingParams: string;
  visibility: Visibility2;
}

export interface Visibility2 {
  types: string;
}

export interface NavigationEndpoint {
  clickTrackingParams: string;
  loggingUrls: LoggingUrl[];
  commandMetadata: CommandMetadata;
  watchEndpoint: WatchEndpoint;
}

export interface LoggingUrl {
  baseUrl: string;
}

export interface CommandMetadata {
  webCommandMetadata: WebCommandMetadata;
}

export interface WebCommandMetadata {
  url: string;
  webPageType: string;
  rootVe: number;
}

export interface WatchEndpoint {
  videoId: string;
  playerParams: string;
  watchEndpointSupportedOnesieConfig: WatchEndpointSupportedOnesieConfig;
}

export interface WatchEndpointSupportedOnesieConfig {
  html5PlaybackOnesieConfig: Html5PlaybackOnesieConfig;
}

export interface Html5PlaybackOnesieConfig {
  commonConfig: CommonConfig;
}

export interface CommonConfig {
  url: string;
}

export interface InlinePlaybackEndpoint {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata2;
  watchEndpoint: WatchEndpoint2;
}

export interface CommandMetadata2 {
  webCommandMetadata: WebCommandMetadata2;
}

export interface WebCommandMetadata2 {
  url: string;
  webPageType: string;
  rootVe: number;
}

export interface WatchEndpoint2 {
  videoId: string;
  playerParams: string;
  watchEndpointSupportedOnesieConfig: WatchEndpointSupportedOnesieConfig2;
}

export interface WatchEndpointSupportedOnesieConfig2 {
  html5PlaybackOnesieConfig: Html5PlaybackOnesieConfig2;
}

export interface Html5PlaybackOnesieConfig2 {
  commonConfig: CommonConfig2;
}

export interface CommonConfig2 {
  url: string;
}

export interface ChannelThumbnail {
  thumbnails: Thumbnail3[];
}

export interface Thumbnail3 {
  url: string;
  width: number;
  height: number;
}

export interface LengthText {
  accessibility: Accessibility2;
  simpleText: string;
}

export interface Accessibility2 {
  accessibilityData: AccessibilityData2;
}

export interface AccessibilityData2 {
  label: string;
}

export interface ShortBylineText {
  runs: Run3[];
  accessibility: Accessibility3;
}

export interface Run3 {
  text: string;
  navigationEndpoint: NavigationEndpoint2;
}

export interface NavigationEndpoint2 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata3;
  browseEndpoint: BrowseEndpoint;
}

export interface CommandMetadata3 {
  webCommandMetadata: WebCommandMetadata3;
}

export interface WebCommandMetadata3 {
  url: string;
  webPageType: string;
  rootVe: number;
  apiUrl: string;
}

export interface BrowseEndpoint {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface Accessibility3 {
  accessibilityData: AccessibilityData3;
}

export interface AccessibilityData3 {
  label: string;
}

export interface Badge {
  metadataBadgeRenderer: MetadataBadgeRenderer;
}

export interface MetadataBadgeRenderer {
  style: string;
  label: string;
  trackingParams: string;
}

export interface Menu {
  menuRenderer: MenuRenderer;
}

export interface MenuRenderer {
  trackingParams: string;
  isDisabled: boolean;
  disabledCommand: DisabledCommand;
}

export interface DisabledCommand {
  clickTrackingParams: string;
  openPopupAction: OpenPopupAction;
}

export interface OpenPopupAction {
  popup: Popup;
  popupType: string;
  accessibilityData: AccessibilityData4;
}

export interface Popup {
  aboutThisAdRenderer: AboutThisAdRenderer;
}

export interface AboutThisAdRenderer {
  url: Url;
  trackingParams: string;
}

export interface Url {
  privateDoNotAccessOrElseTrustedResourceUrlWrappedValue: string;
}

export interface AccessibilityData4 {
  accessibilityData: AccessibilityData5;
}

export interface AccessibilityData5 {
  label: string;
}

export interface ActiveView {
  viewableCommands: ViewableCommand[];
  endOfSessionCommands: EndOfSessionCommand[];
  regexUriMacroValidator: RegexUriMacroValidator;
}

export interface ViewableCommand {
  clickTrackingParams: string;
  loggingUrls: LoggingUrl2[];
  pingingEndpoint: PingingEndpoint;
}

export interface LoggingUrl2 {
  baseUrl: string;
}

export interface PingingEndpoint {
  hack: boolean;
}

export interface EndOfSessionCommand {
  clickTrackingParams: string;
  loggingUrls: LoggingUrl3[];
  pingingEndpoint: PingingEndpoint2;
}

export interface LoggingUrl3 {
  baseUrl: string;
}

export interface PingingEndpoint2 {
  hack: boolean;
}

export interface RegexUriMacroValidator {
  emptyMap: boolean;
}

export interface ChannelEndpoint {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata4;
  browseEndpoint: BrowseEndpoint2;
}

export interface CommandMetadata4 {
  webCommandMetadata: WebCommandMetadata4;
}

export interface WebCommandMetadata4 {
  url: string;
  webPageType: string;
  rootVe: number;
  apiUrl: string;
}

export interface BrowseEndpoint2 {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface ThumbnailOverlay {
  thumbnailOverlayTimeStatusRenderer?: ThumbnailOverlayTimeStatusRenderer;
  thumbnailOverlayNowPlayingRenderer?: ThumbnailOverlayNowPlayingRenderer;
  thumbnailOverlayLoadingPreviewRenderer?: ThumbnailOverlayLoadingPreviewRenderer;
}

export interface ThumbnailOverlayTimeStatusRenderer {
  text: Text;
  style: string;
}

export interface Text {
  accessibility: Accessibility4;
  simpleText: string;
}

export interface Accessibility4 {
  accessibilityData: AccessibilityData6;
}

export interface AccessibilityData6 {
  label: string;
}

export interface ThumbnailOverlayNowPlayingRenderer {
  text: Text2;
}

export interface Text2 {
  runs: Run4[];
}

export interface Run4 {
  text: string;
}

export interface ThumbnailOverlayLoadingPreviewRenderer {
  text: Text3;
}

export interface Text3 {
  runs: Run5[];
}

export interface Run5 {
  text: string;
}

export interface OnImpression {
  clickTrackingParams: string;
  commandExecutorCommand: CommandExecutorCommand;
}

export interface CommandExecutorCommand {
  commands: Command[];
}

export interface Command {
  clickTrackingParams: string;
  loggingUrls: LoggingUrl4[];
  pingingEndpoint: PingingEndpoint3;
}

export interface LoggingUrl4 {
  baseUrl: string;
}

export interface PingingEndpoint3 {
  hack: boolean;
}

export interface SecondaryDescription {
  simpleText: string;
}

export interface VideoRenderer {
  videoId: string;
  thumbnail: Thumbnail4;
  title: Title2;
  descriptionSnippet: DescriptionSnippet;
  longBylineText: LongBylineText;
  publishedTimeText: PublishedTimeText;
  lengthText: LengthText2;
  viewCountText: ViewCountText;
  navigationEndpoint: NavigationEndpoint4;
  badges?: Badge2[];
  ownerBadges?: OwnerBadge[];
  ownerText: OwnerText;
  shortBylineText: ShortBylineText2;
  trackingParams: string;
  showActionMenu: boolean;
  shortViewCountText: ShortViewCountText;
  menu: Menu2;
  channelThumbnailSupportedRenderers: ChannelThumbnailSupportedRenderers;
  thumbnailOverlays: ThumbnailOverlay2[];
  richThumbnail: RichThumbnail;
  inlinePlaybackEndpoint: InlinePlaybackEndpoint2;
  avatar: Avatar;
  owner: Owner;
}

export interface Thumbnail4 {
  thumbnails: Thumbnail5[];
}

export interface Thumbnail5 {
  url: string;
  width: number;
  height: number;
}

export interface Title2 {
  runs: Run6[];
  accessibility: Accessibility5;
}

export interface Run6 {
  text: string;
}

export interface Accessibility5 {
  accessibilityData: AccessibilityData7;
}

export interface AccessibilityData7 {
  label: string;
}

export interface DescriptionSnippet {
  runs: Run7[];
}

export interface Run7 {
  text: string;
}

export interface LongBylineText {
  runs: Run8[];
}

export interface Run8 {
  text: string;
  navigationEndpoint: NavigationEndpoint3;
}

export interface NavigationEndpoint3 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata5;
  browseEndpoint: BrowseEndpoint3;
}

export interface CommandMetadata5 {
  webCommandMetadata: WebCommandMetadata5;
}

export interface WebCommandMetadata5 {
  url: string;
  webPageType: string;
  rootVe: number;
  apiUrl: string;
}

export interface BrowseEndpoint3 {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface PublishedTimeText {
  simpleText: string;
}

export interface LengthText2 {
  accessibility: Accessibility6;
  simpleText: string;
}

export interface Accessibility6 {
  accessibilityData: AccessibilityData8;
}

export interface AccessibilityData8 {
  label: string;
}

export interface ViewCountText {
  simpleText: string;
}

export interface NavigationEndpoint4 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata6;
  watchEndpoint: WatchEndpoint3;
}

export interface CommandMetadata6 {
  webCommandMetadata: WebCommandMetadata6;
}

export interface WebCommandMetadata6 {
  url: string;
  webPageType: string;
  rootVe: number;
}

export interface WatchEndpoint3 {
  videoId: string;
  playerParams?: string;
  ustreamerConfig?: string;
  watchEndpointSupportedOnesieConfig: WatchEndpointSupportedOnesieConfig3;
  startTimeSeconds: number;
}

export interface WatchEndpointSupportedOnesieConfig3 {
  html5PlaybackOnesieConfig: Html5PlaybackOnesieConfig3;
}

export interface Html5PlaybackOnesieConfig3 {
  commonConfig: CommonConfig3;
}

export interface CommonConfig3 {
  url: string;
}

export interface Badge2 {
  metadataBadgeRenderer: MetadataBadgeRenderer2;
}

export interface MetadataBadgeRenderer2 {
  icon: Icon;
  style: string;
  label: string;
  trackingParams: string;
}

export interface Icon {
  iconType: string;
}

export interface OwnerBadge {
  metadataBadgeRenderer: MetadataBadgeRenderer3;
}

export interface MetadataBadgeRenderer3 {
  icon: Icon2;
  style: string;
  tooltip: string;
  trackingParams: string;
  accessibilityData: AccessibilityData9;
}

export interface Icon2 {
  iconType: string;
}

export interface AccessibilityData9 {
  label: string;
}

export interface OwnerText {
  runs: Run9[];
}

export interface Run9 {
  text: string;
  navigationEndpoint: NavigationEndpoint5;
}

export interface NavigationEndpoint5 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata7;
  browseEndpoint: BrowseEndpoint4;
}

export interface CommandMetadata7 {
  webCommandMetadata: WebCommandMetadata7;
}

export interface WebCommandMetadata7 {
  url: string;
  webPageType: string;
  rootVe: number;
  apiUrl: string;
}

export interface BrowseEndpoint4 {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface ShortBylineText2 {
  runs: Run10[];
}

export interface Run10 {
  text: string;
  navigationEndpoint: NavigationEndpoint6;
}

export interface NavigationEndpoint6 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata8;
  browseEndpoint: BrowseEndpoint5;
}

export interface CommandMetadata8 {
  webCommandMetadata: WebCommandMetadata8;
}

export interface WebCommandMetadata8 {
  url: string;
  webPageType: string;
  rootVe: number;
  apiUrl: string;
}

export interface BrowseEndpoint5 {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface ShortViewCountText {
  accessibility: Accessibility7;
  simpleText: string;
}

export interface Accessibility7 {
  accessibilityData: AccessibilityData10;
}

export interface AccessibilityData10 {
  label: string;
}

export interface Menu2 {
  menuRenderer: MenuRenderer2;
}

export interface MenuRenderer2 {
  items: Item[];
  trackingParams: string;
  accessibility: Accessibility9;
  targetId?: string;
}

export interface Item {
  menuServiceItemRenderer?: MenuServiceItemRenderer;
  menuServiceItemDownloadRenderer?: MenuServiceItemDownloadRenderer;
}

export interface MenuServiceItemRenderer {
  text: Text4;
  icon: Icon3;
  serviceEndpoint: ServiceEndpoint;
  trackingParams: string;
  hasSeparator?: boolean;
}

export interface Text4 {
  runs: Run11[];
}

export interface Run11 {
  text: string;
}

export interface Icon3 {
  iconType: string;
}

export interface ServiceEndpoint {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata9;
  getReportFormEndpoint?: GetReportFormEndpoint;
  feedbackEndpoint?: FeedbackEndpoint;
  shareEntityServiceEndpoint?: ShareEntityServiceEndpoint;
  signalServiceEndpoint?: SignalServiceEndpoint2;
  playlistEditEndpoint?: PlaylistEditEndpoint;
  addToPlaylistServiceEndpoint?: AddToPlaylistServiceEndpoint;
}

export interface CommandMetadata9 {
  webCommandMetadata: WebCommandMetadata9;
}

export interface WebCommandMetadata9 {
  sendPost: boolean;
  apiUrl?: string;
}

export interface GetReportFormEndpoint {
  params: string;
}

export interface FeedbackEndpoint {
  feedbackToken: string;
  uiActions: UiActions;
  actions: Action[];
  contentId: string;
}

export interface UiActions {
  hideEnclosingContainer: boolean;
}

export interface Action {
  clickTrackingParams: string;
  replaceEnclosingAction: ReplaceEnclosingAction;
}

export interface ReplaceEnclosingAction {
  item: Item2;
}

export interface Item2 {
  notificationMultiActionRenderer: NotificationMultiActionRenderer;
}

export interface NotificationMultiActionRenderer {
  responseText: ResponseText;
  buttons: Button[];
  trackingParams: string;
  dismissalViewStyle: string;
}

export interface ResponseText {
  runs?: Run12[];
  accessibility: Accessibility8;
  simpleText?: string;
}

export interface Run12 {
  text: string;
}

export interface Accessibility8 {
  accessibilityData: AccessibilityData11;
}

export interface AccessibilityData11 {
  label: string;
}

export interface Button {
  buttonRenderer: ButtonRenderer;
}

export interface ButtonRenderer {
  style: string;
  text: Text5;
  serviceEndpoint?: ServiceEndpoint2;
  trackingParams: string;
  command?: Command2;
}

export interface Text5 {
  simpleText?: string;
  runs?: Run13[];
}

export interface Run13 {
  text: string;
}

export interface ServiceEndpoint2 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata10;
  undoFeedbackEndpoint?: UndoFeedbackEndpoint;
  signalServiceEndpoint?: SignalServiceEndpoint;
}

export interface CommandMetadata10 {
  webCommandMetadata: WebCommandMetadata10;
}

export interface WebCommandMetadata10 {
  sendPost: boolean;
  apiUrl?: string;
}

export interface UndoFeedbackEndpoint {
  undoToken: string;
  actions: Action2[];
  contentId: string;
}

export interface Action2 {
  clickTrackingParams: string;
  undoFeedbackAction: UndoFeedbackAction;
}

export interface UndoFeedbackAction {
  hack: boolean;
}

export interface SignalServiceEndpoint {
  signal: string;
  actions: Action3[];
}

export interface Action3 {
  clickTrackingParams: string;
  signalAction: SignalAction;
}

export interface SignalAction {
  signal: string;
  targetId: string;
}

export interface Command2 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata11;
  urlEndpoint: UrlEndpoint;
}

export interface CommandMetadata11 {
  webCommandMetadata: WebCommandMetadata11;
}

export interface WebCommandMetadata11 {
  url: string;
  webPageType: string;
  rootVe: number;
}

export interface UrlEndpoint {
  url: string;
  target: string;
}

export interface ShareEntityServiceEndpoint {
  serializedShareEntity: string;
  commands: Command3[];
}

export interface Command3 {
  clickTrackingParams: string;
  openPopupAction: OpenPopupAction2;
}

export interface OpenPopupAction2 {
  popup: Popup2;
  popupType: string;
  beReused: boolean;
}

export interface Popup2 {
  unifiedSharePanelRenderer: UnifiedSharePanelRenderer;
}

export interface UnifiedSharePanelRenderer {
  trackingParams: string;
  showLoadingSpinner: boolean;
}

export interface SignalServiceEndpoint2 {
  signal: string;
  actions: Action4[];
}

export interface Action4 {
  clickTrackingParams: string;
  addToPlaylistCommand: AddToPlaylistCommand;
}

export interface AddToPlaylistCommand {
  openMiniplayer: boolean;
  videoId: string;
  listType: string;
  onCreateListCommand: OnCreateListCommand;
  videoIds: string[];
  videoCommand: VideoCommand;
}

export interface OnCreateListCommand {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata12;
  createPlaylistServiceEndpoint: CreatePlaylistServiceEndpoint;
}

export interface CommandMetadata12 {
  webCommandMetadata: WebCommandMetadata12;
}

export interface WebCommandMetadata12 {
  sendPost: boolean;
  apiUrl: string;
}

export interface CreatePlaylistServiceEndpoint {
  videoIds: string[];
  params: string;
}

export interface VideoCommand {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata13;
  watchEndpoint: WatchEndpoint4;
}

export interface CommandMetadata13 {
  webCommandMetadata: WebCommandMetadata13;
}

export interface WebCommandMetadata13 {
  url: string;
  webPageType: string;
  rootVe: number;
}

export interface WatchEndpoint4 {
  videoId: string;
  playerParams?: string;
  watchEndpointSupportedOnesieConfig: WatchEndpointSupportedOnesieConfig4;
}

export interface WatchEndpointSupportedOnesieConfig4 {
  html5PlaybackOnesieConfig: Html5PlaybackOnesieConfig4;
}

export interface Html5PlaybackOnesieConfig4 {
  commonConfig: CommonConfig4;
}

export interface CommonConfig4 {
  url: string;
}

export interface PlaylistEditEndpoint {
  playlistId: string;
  actions: Action5[];
}

export interface Action5 {
  addedVideoId: string;
  action: string;
}

export interface AddToPlaylistServiceEndpoint {
  videoId: string;
}

export interface MenuServiceItemDownloadRenderer {
  serviceEndpoint: ServiceEndpoint3;
  trackingParams: string;
}

export interface ServiceEndpoint3 {
  clickTrackingParams: string;
  offlineVideoEndpoint: OfflineVideoEndpoint;
}

export interface OfflineVideoEndpoint {
  videoId: string;
  onAddCommand: OnAddCommand;
}

export interface OnAddCommand {
  clickTrackingParams: string;
  getDownloadActionCommand: GetDownloadActionCommand;
}

export interface GetDownloadActionCommand {
  videoId: string;
  params: string;
}

export interface Accessibility9 {
  accessibilityData: AccessibilityData12;
}

export interface AccessibilityData12 {
  label: string;
}

export interface ChannelThumbnailSupportedRenderers {
  channelThumbnailWithLinkRenderer: ChannelThumbnailWithLinkRenderer;
}

export interface ChannelThumbnailWithLinkRenderer {
  thumbnail: Thumbnail6;
  navigationEndpoint: NavigationEndpoint7;
  accessibility: Accessibility10;
  title: string;
}

export interface Thumbnail6 {
  thumbnails: Thumbnail7[];
}

export interface Thumbnail7 {
  url: string;
  width: number;
  height: number;
}

export interface NavigationEndpoint7 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata14;
  browseEndpoint: BrowseEndpoint6;
}

export interface CommandMetadata14 {
  webCommandMetadata: WebCommandMetadata14;
}

export interface WebCommandMetadata14 {
  url: string;
  webPageType: string;
  rootVe: number;
  apiUrl: string;
}

export interface BrowseEndpoint6 {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface Accessibility10 {
  accessibilityData: AccessibilityData13;
}

export interface AccessibilityData13 {
  label: string;
}

export interface ThumbnailOverlay2 {
  thumbnailOverlayTimeStatusRenderer?: ThumbnailOverlayTimeStatusRenderer2;
  thumbnailOverlayToggleButtonRenderer?: ThumbnailOverlayToggleButtonRenderer;
  thumbnailOverlayNowPlayingRenderer?: ThumbnailOverlayNowPlayingRenderer2;
  thumbnailOverlayLoadingPreviewRenderer?: ThumbnailOverlayLoadingPreviewRenderer2;
}

export interface ThumbnailOverlayTimeStatusRenderer2 {
  text: Text6;
  style: string;
}

export interface Text6 {
  accessibility: Accessibility11;
  simpleText: string;
}

export interface Accessibility11 {
  accessibilityData: AccessibilityData14;
}

export interface AccessibilityData14 {
  label: string;
}

export interface ThumbnailOverlayToggleButtonRenderer {
  untoggledIcon: UntoggledIcon;
  toggledIcon: ToggledIcon;
  untoggledTooltip: string;
  toggledTooltip: string;
  untoggledServiceEndpoint: UntoggledServiceEndpoint;
  untoggledAccessibility: UntoggledAccessibility;
  toggledAccessibility: ToggledAccessibility;
  trackingParams: string;
  isToggled?: boolean;
  toggledServiceEndpoint?: ToggledServiceEndpoint;
}

export interface UntoggledIcon {
  iconType: string;
}

export interface ToggledIcon {
  iconType: string;
}

export interface UntoggledServiceEndpoint {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata15;
  signalServiceEndpoint?: SignalServiceEndpoint3;
  playlistEditEndpoint?: PlaylistEditEndpoint2;
}

export interface CommandMetadata15 {
  webCommandMetadata: WebCommandMetadata15;
}

export interface WebCommandMetadata15 {
  sendPost: boolean;
  apiUrl?: string;
}

export interface SignalServiceEndpoint3 {
  signal: string;
  actions: Action6[];
}

export interface Action6 {
  clickTrackingParams: string;
  addToPlaylistCommand: AddToPlaylistCommand2;
}

export interface AddToPlaylistCommand2 {
  openMiniplayer: boolean;
  videoId: string;
  listType: string;
  onCreateListCommand: OnCreateListCommand2;
  videoIds: string[];
}

export interface OnCreateListCommand2 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata16;
  createPlaylistServiceEndpoint: CreatePlaylistServiceEndpoint2;
}

export interface CommandMetadata16 {
  webCommandMetadata: WebCommandMetadata16;
}

export interface WebCommandMetadata16 {
  sendPost: boolean;
  apiUrl: string;
}

export interface CreatePlaylistServiceEndpoint2 {
  videoIds: string[];
  params: string;
}

export interface PlaylistEditEndpoint2 {
  playlistId: string;
  actions: Action7[];
}

export interface Action7 {
  addedVideoId: string;
  action: string;
}

export interface UntoggledAccessibility {
  accessibilityData: AccessibilityData15;
}

export interface AccessibilityData15 {
  label: string;
}

export interface ToggledAccessibility {
  accessibilityData: AccessibilityData16;
}

export interface AccessibilityData16 {
  label: string;
}

export interface ToggledServiceEndpoint {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata17;
  playlistEditEndpoint: PlaylistEditEndpoint3;
}

export interface CommandMetadata17 {
  webCommandMetadata: WebCommandMetadata17;
}

export interface WebCommandMetadata17 {
  sendPost: boolean;
  apiUrl: string;
}

export interface PlaylistEditEndpoint3 {
  playlistId: string;
  actions: Action8[];
}

export interface Action8 {
  action: string;
  removedVideoId: string;
}

export interface ThumbnailOverlayNowPlayingRenderer2 {
  text: Text7;
}

export interface Text7 {
  runs: Run14[];
}

export interface Run14 {
  text: string;
}

export interface ThumbnailOverlayLoadingPreviewRenderer2 {
  text: Text8;
}

export interface Text8 {
  runs: Run15[];
}

export interface Run15 {
  text: string;
}

export interface RichThumbnail {
  movingThumbnailRenderer: MovingThumbnailRenderer;
}

export interface MovingThumbnailRenderer {
  movingThumbnailDetails: MovingThumbnailDetails;
  enableHoveredLogging: boolean;
  enableOverlay: boolean;
}

export interface MovingThumbnailDetails {
  thumbnails: Thumbnail8[];
  logAsMovingThumbnail: boolean;
}

export interface Thumbnail8 {
  url: string;
  width: number;
  height: number;
}

export interface InlinePlaybackEndpoint2 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata18;
  watchEndpoint: WatchEndpoint5;
}

export interface CommandMetadata18 {
  webCommandMetadata: WebCommandMetadata18;
}

export interface WebCommandMetadata18 {
  url: string;
  webPageType: string;
  rootVe: number;
}

export interface WatchEndpoint5 {
  videoId: string;
  playerParams: string;
  playerExtraUrlParams: PlayerExtraUrlParam[];
  ustreamerConfig?: string;
  watchEndpointSupportedOnesieConfig: WatchEndpointSupportedOnesieConfig5;
  startTimeSeconds: number;
}

export interface PlayerExtraUrlParam {
  key: string;
  value: string;
}

export interface WatchEndpointSupportedOnesieConfig5 {
  html5PlaybackOnesieConfig: Html5PlaybackOnesieConfig5;
}

export interface Html5PlaybackOnesieConfig5 {
  commonConfig: CommonConfig5;
}

export interface CommonConfig5 {
  url: string;
}

export interface Avatar {
  decoratedAvatarViewModel: DecoratedAvatarViewModel;
}

export interface DecoratedAvatarViewModel {
  avatar: Avatar2;
  a11yLabel: string;
  rendererContext: RendererContext;
}

export interface Avatar2 {
  avatarViewModel: AvatarViewModel;
}

export interface AvatarViewModel {
  image: Image;
  avatarImageSize: string;
}

export interface Image {
  sources: Source[];
}

export interface Source {
  url: string;
  width: number;
  height: number;
}

export interface RendererContext {
  commandContext: CommandContext;
}

export interface CommandContext {
  onTap: OnTap;
}

export interface OnTap {
  innertubeCommand: InnertubeCommand;
}

export interface InnertubeCommand {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata19;
  browseEndpoint: BrowseEndpoint7;
}

export interface CommandMetadata19 {
  webCommandMetadata: WebCommandMetadata19;
}

export interface WebCommandMetadata19 {
  url: string;
  webPageType: string;
  rootVe: number;
  apiUrl: string;
}

export interface BrowseEndpoint7 {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface Owner {
  thumbnail: Thumbnail9;
  navigationEndpoint: NavigationEndpoint8;
  accessibility: Accessibility12;
  title: string;
}

export interface Thumbnail9 {
  thumbnails: Thumbnail10[];
}

export interface Thumbnail10 {
  url: string;
  width: number;
  height: number;
}

export interface NavigationEndpoint8 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata20;
  browseEndpoint: BrowseEndpoint8;
}

export interface CommandMetadata20 {
  webCommandMetadata: WebCommandMetadata20;
}

export interface WebCommandMetadata20 {
  url: string;
  webPageType: string;
  rootVe: number;
  apiUrl: string;
}

export interface BrowseEndpoint8 {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface Accessibility12 {
  accessibilityData: AccessibilityData17;
}

export interface AccessibilityData17 {
  label: string;
}

export interface ContinuationItemRenderer {
  trigger: string;
  continuationEndpoint: ContinuationEndpoint;
  ghostCards: GhostCards;
}

export interface ContinuationEndpoint {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata21;
  continuationCommand: ContinuationCommand;
}

export interface CommandMetadata21 {
  webCommandMetadata: WebCommandMetadata21;
}

export interface WebCommandMetadata21 {
  sendPost: boolean;
  apiUrl: string;
}

export interface ContinuationCommand {
  token: string;
  request: string;
}

export interface GhostCards {
  ghostGridRenderer: GhostGridRenderer;
}

export interface GhostGridRenderer {
  rows: number;
}

export interface Header {
  feedFilterChipBarRenderer: FeedFilterChipBarRenderer;
}

export interface FeedFilterChipBarRenderer {
  contents: Content3[];
  trackingParams: string;
  nextButton: NextButton;
  previousButton: PreviousButton;
  styleType: string;
}

export interface Content3 {
  chipCloudChipRenderer: ChipCloudChipRenderer;
}

export interface ChipCloudChipRenderer {
  style: Style;
  text: Text9;
  trackingParams: string;
  isSelected?: boolean;
  navigationEndpoint?: NavigationEndpoint9;
  targetId?: string;
  uniqueId?: string;
}

export interface Style {
  styleType: string;
}

export interface Text9 {
  runs: Run16[];
}

export interface Run16 {
  text: string;
}

export interface NavigationEndpoint9 {
  clickTrackingParams: string;
  commandMetadata: CommandMetadata22;
  continuationCommand: ContinuationCommand2;
}

export interface CommandMetadata22 {
  webCommandMetadata: WebCommandMetadata22;
}

export interface WebCommandMetadata22 {
  sendPost: boolean;
  apiUrl: string;
}

export interface ContinuationCommand2 {
  token: string;
  request: string;
  command: Command4;
}

export interface Command4 {
  clickTrackingParams: string;
  showReloadUiCommand: ShowReloadUiCommand;
}

export interface ShowReloadUiCommand {
  targetId: string;
}

export interface NextButton {
  buttonRenderer: ButtonRenderer2;
}

export interface ButtonRenderer2 {
  style: string;
  size: string;
  isDisabled: boolean;
  icon: Icon4;
  tooltip: string;
  trackingParams: string;
  accessibilityData: AccessibilityData18;
}

export interface Icon4 {
  iconType: string;
}

export interface AccessibilityData18 {
  accessibilityData: AccessibilityData19;
}

export interface AccessibilityData19 {
  label: string;
}

export interface PreviousButton {
  buttonRenderer: ButtonRenderer3;
}

export interface ButtonRenderer3 {
  style: string;
  size: string;
  isDisabled: boolean;
  icon: Icon5;
  tooltip: string;
  trackingParams: string;
  accessibilityData: AccessibilityData20;
}

export interface Icon5 {
  iconType: string;
}

export interface AccessibilityData20 {
  accessibilityData: AccessibilityData21;
}

export interface AccessibilityData21 {
  label: string;
}

export interface ReflowOptions {
  minimumRowsOfVideosAtStart: number;
  minimumRowsOfVideosBetweenSections: number;
}

// https://www.youtube.com/youtubei/v1/guide?prettyPrint=false
//
// {
//     "guideEntryRenderer": {
//       "navigationEndpoint": {
//         "clickTrackingParams": "CGEQrYEJGBQiEwj77oP2vcSOAxVs-gYHHS-4Djw=",
//         "commandMetadata": {
//           "webCommandMetadata": {
//             "url": "/@anatudor",
//             "webPageType": "WEB_PAGE_TYPE_CHANNEL",
//             "rootVe": 3611,
//             "apiUrl": "/youtubei/v1/browse"
//           }
//         },
//         "browseEndpoint": {
//           "browseId": "UCUxkTxO8NivVeGKJk1QnzWQ",
//           "canonicalBaseUrl": "/@anatudor"
//         }
//       },
//       "thumbnail": {
//         "thumbnails": [
//           {
//             "url": "https://yt3.ggpht.com/ytc/AIdro_lZ3TwJjOeXmmpM5cejsav8VSQrZ89DdMs7fBTQ0VI9Pw=s88-c-k-c0x00ffffff-no-rj"
//           }
//         ]
//       },
//       "badges": { "liveBroadcasting": false },
//       "trackingParams": "CGEQrYEJGBQiEwj77oP2vcSOAxVs-gYHHS-4Djw=",
//       "formattedTitle": { "simpleText": "Ana Tudor" },
//       "accessibility": {
//         "accessibilityData": { "label": "Ana Tudor" }
//       },
//       "entryData": {
//         "guideEntryData": {
//           "guideEntryId": "UCUxkTxO8NivVeGKJk1QnzWQ"
//         }
//       },
//       "presentationStyle": "GUIDE_ENTRY_PRESENTATION_STYLE_NONE"
//     }
//   },

// https://www.youtube.com/youtubei/v1/next?prettyPrint=false
//
// {
//     "responseContext": {
//       "serviceTrackingParams": [
//         {
//           "service": "CSI",
//           "params": [
//             { "key": "c", "value": "WEB" },
//             { "key": "cver", "value": "2.20250710.09.00" },
//             { "key": "yt_li", "value": "1" },
//             { "key": "GetWatchNext_rid", "value": "0x453ac79530cc4edd" }
//           ]
//         },
//         {
//           "service": "GFEEDBACK",
//           "params": [
//             { "key": "logged_in", "value": "1" },
//             {
//               "key": "e",
//               "value": "23804281,23986021,24004644,24077241,24166867,24186126,24290153,24453989,24459435,24495712,24566687,24699899,39325854,39328892,51010235,51025415,51063643,51072748,51095478,51098299,51115184,51125020,51141472,51148037,51152050,51183909,51204329,51222973,51225397,51227037,51237842,51242448,51272458,51285052,51300176,51300241,51303432,51313109,51313765,51313767,51314158,51338524,51340662,51342857,51349914,51353393,51355912,51366423,51372971,51375205,51384438,51386540,51389629,51404238,51404808,51404810,51404953,51414747,51417990,51432294,51432529,51432560,51437205,51439005,51443158,51444283,51445757,51447191,51447754,51452420,51456629,51459425,51462020,51467524,51467676,51470315,51471745,51472205,51472817,51478868,51481788,51483631,51484222,51489568,51490158,51490331,51491754,51492990,51494655,51495567,51497739,51500051,51500153,51501787,51505436,51506494,51506681,51508979,51509183,51509315,51509543,51509613,51509706,51510485,51510637,51511094,51511440,51512708,51516181,51516704,51516746,51517140,51518123,51518179,51519387,51519754,51521954,51522198,51524041,51524403,51524497,51526397,51526691,51526700,51528112,51529338,51529759,51530495,51532166,51532410,51532623,51534991,51535727,51536392,51537766,51537772,51537778,51538053,51538888,51539094,51539448,51540554,51541257,51541813,51541883,51542227,100670016"
//             }
//           ]
//         },
//         {
//           "service": "GUIDED_HELP",
//           "params": [{ "key": "logged_in", "value": "1" }]
//         },
//         {
//           "service": "ECATCHER",
//           "params": [
//             { "key": "client.version", "value": "2.20250710" },
//             { "key": "client.name", "value": "WEB" }
//           ]
//         }
//       ],
//       "mainAppWebResponseContext": {
//         "datasyncId": "117982832636583176241||",
//         "loggedOut": false,
//         "trackingParam": "kx_fmPxhoPZRzUXBYPBq_oRdIDyHvkTqPxAsMslXvBZQA7HRgkussh7BwOcCE59TDtslLKPQ-SS"
//       },
//       "webResponseContextExtensionData": { "hasDecorated": true }
//     },
//     "trackingParams": "CAAQg2ciEwijy8H2vcSOAxXcOR4AHaA9LrY=",
//     "playerOverlays": {
//       "adPlayerOverlayRenderer": {
//         "title": {
//           "runs": [
//             {
//               "text": "Mercado Libre",
//               "navigationEndpoint": {
//                 "clickTrackingParams": "CAIQ-PcBIhMIo8vB9r3EjgMV3DkeAB2gPS62",
//                 "commandMetadata": {
//                   "webCommandMetadata": {
//                     "url": "/@mercadolibre",
//                     "webPageType": "WEB_PAGE_TYPE_CHANNEL",
//                     "rootVe": 3611,
//                     "apiUrl": "/youtubei/v1/browse"
//                   }
//                 },
//                 "browseEndpoint": {
//                   "browseId": "UCfGKZnz6LPQNm-F0nlWjGzQ",
//                   "canonicalBaseUrl": "/@mercadolibre"
//                 }
//               }
//             }
//           ]
//         },
//         "visitAdvertiserText": { "simpleText": "Visit advertiser" },
//         "thumbnail": {
//           "thumbnails": [
//             {
//               "url": "https://yt3.ggpht.com/6ecAjQlXAFCQdS0shqSfj5H-vK_yCKQ-ihnINGQPeId-0dPY9CgQ6HqGJ3JN2UNx9xFvGJKmFw=w48-h48-s-nd",
//               "width": 48,
//               "height": 48
//             },
//             {
//               "url": "https://yt3.ggpht.com/6ecAjQlXAFCQdS0shqSfj5H-vK_yCKQ-ihnINGQPeId-0dPY9CgQ6HqGJ3JN2UNx9xFvGJKmFw=w96-h96-s-nd",
//               "width": 96,
//               "height": 96
//             },
//             {
//               "url": "https://yt3.ggpht.com/6ecAjQlXAFCQdS0shqSfj5H-vK_yCKQ-ihnINGQPeId-0dPY9CgQ6HqGJ3JN2UNx9xFvGJKmFw=w144-h144-s-nd",
//               "width": 144,
//               "height": 144
//             },
//             {
//               "url": "https://yt3.ggpht.com/6ecAjQlXAFCQdS0shqSfj5H-vK_yCKQ-ihnINGQPeId-0dPY9CgQ6HqGJ3JN2UNx9xFvGJKmFw=w192-h192-s-nd",
//               "width": 192,
//               "height": 192
//             },
//             {
//               "url": "https://yt3.ggpht.com/6ecAjQlXAFCQdS0shqSfj5H-vK_yCKQ-ihnINGQPeId-0dPY9CgQ6HqGJ3JN2UNx9xFvGJKmFw=w240-h240-s-nd",
//               "width": 240,
//               "height": 240
//             }
//           ]
//         },
//         "thumbnailNavigationEndpoint": {
//           "clickTrackingParams": "CAIQ-PcBIhMIo8vB9r3EjgMV3DkeAB2gPS62",
//           "commandMetadata": {
//             "webCommandMetadata": {
//               "url": "/@mercadolibre",
//               "webPageType": "WEB_PAGE_TYPE_CHANNEL",
//               "rootVe": 3611,
//               "apiUrl": "/youtubei/v1/browse"
//             }
//           },
//           "browseEndpoint": {
//             "browseId": "UCfGKZnz6LPQNm-F0nlWjGzQ",
//             "canonicalBaseUrl": "/@mercadolibre"
//           }
//         },
//         "showShareButton": true,
//         "shareNavigationEndpoint": {
//           "clickTrackingParams": "CAIQ-PcBIhMIo8vB9r3EjgMV3DkeAB2gPS62",
//           "commandMetadata": {
//             "webCommandMetadata": { "ignoreNavigation": true }
//           },
//           "shareEntityEndpoint": {
//             "serializedShareEntity": "CgtTbzZuX294VklVcw%3D%3D",
//             "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
//           }
//         },
//         "shortBylineText": {
//           "runs": [
//             {
//               "text": "Mercado Libre",
//               "navigationEndpoint": {
//                 "clickTrackingParams": "CAIQ-PcBIhMIo8vB9r3EjgMV3DkeAB2gPS62",
//                 "commandMetadata": {
//                   "webCommandMetadata": {
//                     "url": "/@mercadolibre",
//                     "webPageType": "WEB_PAGE_TYPE_CHANNEL",
//                     "rootVe": 3611,
//                     "apiUrl": "/youtubei/v1/browse"
//                   }
//                 },
//                 "browseEndpoint": {
//                   "browseId": "UCfGKZnz6LPQNm-F0nlWjGzQ",
//                   "canonicalBaseUrl": "/@mercadolibre"
//                 }
//               }
//             }
//           ]
//         },
//         "trvfaBanner": {
//           "thumbnails": [
//             {
//               "url": "https://yt3.ggpht.com/w5uiCDJoSWbB96RtowpcvHCaxlooK5gCp5uyCXIMuM-bjWQqO9KwGu83tEL_ZgW2xs4lzhgzZA=w2120-fcrop64=1,00005a57ffffa5a8-k-c0xffffffff-no-nd-rj"
//             }
//           ]
//         },
//         "trackingParams": "CAIQ-PcBIhMIo8vB9r3EjgMV3DkeAB2gPS62"
//       }
//     },
//     "adEngagementPanels": [
//       {
//         "engagementPanelSectionListRenderer": {
//           "content": { "adsEngagementPanelContentRenderer": { "hack": true } },
//           "targetId": "engagement-panel-ads",
//           "visibility": "ENGAGEMENT_PANEL_VISIBILITY_HIDDEN",
//           "loggingDirectives": {
//             "trackingParams": "CAEQ040EGAAiEwijy8H2vcSOAxXcOR4AHaA9LrY=",
//             "visibility": { "types": "12" }
//           }
//         }
//       }
//     ],
//     "isAdPlayback": true
//   }
